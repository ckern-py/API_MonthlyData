// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using MetaData;
using Microsoft.EntityFrameworkCore;

namespace Data.Database;

public partial class MonthlydataDBContext : DbContext
{
    public MonthlydataDBContext()
    {
    }

    public MonthlydataDBContext(DbContextOptions<MonthlydataDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<MonthlyDataLogging> MonthlyDataLogging { get; set; }

    public virtual DbSet<TrafficDataDaily> TrafficDataDaily { get; set; }

    public virtual DbSet<TrafficDataMonthly> TrafficDataMonthly { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<MonthlyDataLogging>(entity =>
        {
            entity.HasKey(e => e.TransactionId).HasName("PK__MonthlyD__9A8D5625FC560FDE");

            entity.ToTable("MonthlyData_Logging", "MonthlyData");

            entity.Property(e => e.TransactionId).HasColumnName("Transaction_ID");
            entity.Property(e => e.ApiMethod)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("API_Method");
            entity.Property(e => e.ApplicationName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Application_Name");
            entity.Property(e => e.Debug1)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("Debug_1");
            entity.Property(e => e.Debug2)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("Debug_2");
            entity.Property(e => e.ErrorMessage)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("Error_Message");
            entity.Property(e => e.RequestMessage)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("Request_Message");
            entity.Property(e => e.RequestingEndDt)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Requesting_End_DT");
            entity.Property(e => e.RequestingStartDt)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Requesting_Start_DT");
            entity.Property(e => e.RequestingSystem)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("Requesting_System");
            entity.Property(e => e.ResponseMessage)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("Response_Message");
            entity.Property(e => e.ReturnCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Return_Code");
        });

        modelBuilder.Entity<TrafficDataDaily>(entity =>
        {
            entity.HasKey(e => new { e.CalendarDay, e.CalendarMonthIndex, e.CalendarYear }).HasName("PK_Data_Daily");

            entity.ToTable("Traffic_Data_Daily", "MonthlyData");

            entity.Property(e => e.CalendarDay).HasColumnName("Calendar_Day");
            entity.Property(e => e.CalendarMonthIndex).HasColumnName("Calendar_Month_Index");
            entity.Property(e => e.CalendarYear).HasColumnName("Calendar_Year");
            entity.Property(e => e.CalendarMonth)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Calendar_Month");
            entity.Property(e => e.CalendarWeekDay)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Calendar_WeekDay");
            entity.Property(e => e.DailyDataIn).HasColumnName("Daily_Data_In");
            entity.Property(e => e.DailyDataOut).HasColumnName("Daily_Data_Out");
        });

        modelBuilder.Entity<TrafficDataMonthly>(entity =>
        {
            entity.HasKey(e => new { e.CalendarMonthIndex, e.CalendarYear }).HasName("PK_Data_Monthly");

            entity.ToTable("Traffic_Data_Monthly", "MonthlyData");

            entity.Property(e => e.CalendarMonthIndex).HasColumnName("Calendar_Month_Index");
            entity.Property(e => e.CalendarYear).HasColumnName("Calendar_Year");
            entity.Property(e => e.CalendarMonth)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Calendar_Month");
            entity.Property(e => e.MonthlyDataIn).HasColumnName("Monthly_Data_In");
            entity.Property(e => e.MonthlyDataOut).HasColumnName("Monthly_Data_Out");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}